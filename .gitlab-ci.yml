before_script:
  - apt update -y
  - apt upgrade -y
  - apt -y install curl dirmngr apt-transport-https lsb-release ca-certificates
  - curl -sL https://deb.nodesource.com/setup_12.x | bash -
  - apt-get install -y nodejs
  - apt -y install rsync
  - 'which ssh-agent || ( apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" >> ~/.ssh/config'
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -  
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

stages:
  - deploy-prod
  - deploy-dev

deploy-prod:
  stage: deploy-prod
  only:
    - master
  script:
    - ssh $ACHORD_HOST_CONNECT "cd /var/www/prod/achord.ru; git pull origin master; docker-compose -f docker-compose.yml -p pianosheet restart; exit;"
    - cd frontend/pianosheet/
    - npm install
    - npm run build
    - rsync -avz --del -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./build/ $ACHORD_HOST_CONNECT:$FRONTEND_BUILD_FOLDER_FULLPATH

deploy-dev:
  stage: deploy-dev
  only:
    - dev
  script:
    - ssh $ACHORD_HOST_CONNECT "cd /var/www/dev/achord.ru; git pull origin dev; docker-compose -f docker-compose.yml -p pianosheet_dev restart; exit;"
    - cd frontend/pianosheet/
    - npm install
    - npm run build
    - rsync -avz --del -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" ./build/ $ACHORD_HOST_CONNECT:$FRONTEND_BUILD_FOLDER_FULLPATH_DEV
